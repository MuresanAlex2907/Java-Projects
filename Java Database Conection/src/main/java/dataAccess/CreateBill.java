package dataAccess;

import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import model.Order;

public class CreateBill {

	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
	private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
	private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
	/**
	 * method used to create the pdf file for the bill
	 * @param o order which we want to create a bill
	 */
	public static void makeBill(Order o) {
		try {
			Document document = new Document();
			PdfWriter.getInstance(document, new FileOutputStream("D:\\Proiecte Java\\Assignment3\\bill.pdf"));
			document.open();
			addMetaData(document);
			addTitlePage(document);
			createTable(document,o);
			document.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * method used to create the title and 
	 * other important information for the pdf file
	 * @param document
	 */
	private static void addMetaData(Document document) {
		document.addTitle("Bill");
		document.addAuthor("Muresan Alex");
		document.addCreator("Muresan Alex");
	}
	/**
	 * method used to set the title of the file
	 * @param document
	 * @throws DocumentException
	 */
	private static void addTitlePage(Document document) throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		preface.add(new Paragraph("Bill", catFont));
		preface.setAlignment(Element.ALIGN_CENTER);

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph("Report generated by: " + "Muresan Alex" + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		preface.setAlignment(Element.ALIGN_CENTER);
        addEmptyLine(preface,5);
		document.add(preface);
		// Start a new page
       
	}
	/**
	 * method used to add an n empty lines into the file
	 * @param paragraph
	 * @param number number of empty lines to be added
	 */
	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}

	/**
	 * method used to create a table to be added into the file
	 * @param document
	 * @param o order after which the table is made
	 * @throws BadElementException
	 */
	private static void createTable(Document document,Order o)
	            throws BadElementException {
		 PdfPTable table = new PdfPTable(6);

	        // t.setBorderColor(BaseColor.GRAY);
	        // t.setPadding(4);
	        // t.setSpacing(4);
	        // t.setBorderWidth(1);

	        PdfPCell c1 = new PdfPCell(new Phrase("Client Name"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);

	        c1 = new PdfPCell(new Phrase("Product Name"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);

	        c1 = new PdfPCell(new Phrase("Size"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);
	        
	        c1 = new PdfPCell(new Phrase("Quantity"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);
	        
	        c1 = new PdfPCell(new Phrase("Price"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);
	        
	        c1 = new PdfPCell(new Phrase("Total"));
	        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	        table.addCell(c1);
	        table.setHeaderRows(1);

	        table.addCell(o.getC_name());
	        table.addCell(o.getP_name());
	        table.addCell(o.getSize());
	        table.addCell(Integer.toString(o.getQuantity()));
	        table.addCell(Integer.toString(o.getPrice()));
	        table.addCell(Integer.toString(o.getTotal()));

	        try {
				document.add(table);
			} catch (DocumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

	    }
}
